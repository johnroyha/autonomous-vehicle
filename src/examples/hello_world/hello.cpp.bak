//#include <px4_platform_common/px4_config.h>
//#include <px4_platform_common/log.h>
//#include <uORB/topics/rc_channels.h>
//
//extern "C" __EXPORT int hello_world_main(int argc, char *argv[]);
//
//int hello_world_main(int argc, char *argv[]) {
//	PROJECT 2 - STEP 0
//	int rc_channel_handle;
//
//	rc_channels_s rc_data;
//	rc_channel_handle = orb_subscribe(ORB_ID(rc_channels));
//	orb_set_interval(rc_channel_handle, 200);
//
//	while (1) {
//		orb_copy(ORB_ID(rc_channels), rc_channel_handle, &rc_data);
//		PX4_INFO("CH1 = %f, CH2 = %f, CH3 = %f, CH4 = %f, CH5 = %f, CH6 = %f, CH7 = %f, CH8 = %f, CH9 = %f, CH10 = %f",
//				(double )rc_data.channels[0],
//				(double )rc_data.channels[1],
//				(double )rc_data.channels[2],
//				(double )rc_data.channels[3],
//				(double )rc_data.channels[4],
//				(double )rc_data.channels[5],
//				(double )rc_data.channels[6],
//				(double )rc_data.channels[7],
//				(double )rc_data.channels[8],
//				(double )rc_data.channels[9]);
//
//
//		px4_usleep(200000);
//	}
//
//	EXPERIMENT 3 PART C
//
//	return 0;
//}

//PROJECT 2 - STEP 1
#include <px4_platform_common/px4_config.h>
#include <px4_platform_common/log.h>

#include <drivers/drv_hrt.h>
#include <uORB/Publication.hpp>
#include <uORB/topics/test_motor.h>
#include <uORB/topics/rc_channels.h>

#define DC_MOTOR 0
#define SERVO_MOTOR 1

extern "C" __EXPORT int hello_world_main(int argc, char *argv[]);

int hello_world_main(int argc, char *argv[]) {
	test_motor_s test_motor;
	double motor_value = 0; // a number between 0 to 1
	double angle = 0;
	uORB::Publication<test_motor_s> test_motor_pub(ORB_ID(test_motor));

	while (1) {
		PX4_INFO(
				"Enter speed value (0 to 1). If you enter a value outside the range, the motor will be stopped and the application will be terminated.");
		scanf("%lf", &motor_value);
		if (motor_value > 1.0 || motor_value < 0)
			break;

		PX4_INFO("Motor speed is %f", motor_value);
		test_motor.timestamp = hrt_absolute_time();
		test_motor.motor_number = DC_MOTOR;
		test_motor.value = (float) motor_value;
		test_motor.action = test_motor_s::ACTION_RUN;
		test_motor.driver_instance = 0;
		test_motor.timeout_ms = 0;

		test_motor_pub.publish(test_motor);

		PX4_INFO(
				"Enter angle value (0 to 1). If you enter a value outside the range, the motor will be stopped and the application will be terminated.");
		scanf("%lf", &angle);
		if (angle > 1.0 || angle < 0)
			break;
		PX4_INFO("Angle is %f", angle);
		test_motor.timestamp = hrt_absolute_time();
		test_motor.motor_number = SERVO_MOTOR;
		test_motor.value = (float) angle;
		test_motor.action = test_motor_s::ACTION_RUN;
		test_motor.driver_instance = 0;
		test_motor.timeout_ms = 0;

		test_motor_pub.publish(test_motor);
	}

	PX4_INFO("The motor will be stopped");
	test_motor.timestamp = hrt_absolute_time();
	test_motor.motor_number = DC_MOTOR;
	test_motor.value = 0.5;
	test_motor.driver_instance = 0;
	test_motor.timeout_ms = 0;

	test_motor_pub.publish(test_motor);

	PX4_INFO("The motor will be stopped");
	test_motor.timestamp = hrt_absolute_time();
	test_motor.motor_number = SERVO_MOTOR;
	test_motor.value = 0.5;
	test_motor.driver_instance = 0;
	test_motor.timeout_ms = 0;

	test_motor_pub.publish(test_motor);

	return 0;
}

